---
import { siteConfig } from "../config";
const hasExperience = siteConfig.experience && siteConfig.experience.length > 0;

// Helper function to get English value for initial render
function getEN(value: any): any {
  if (typeof value === 'object' && value !== null && !Array.isArray(value)) {
    return value.en || '';
  }
  return value || '';
}
---

{
  hasExperience && (
    <section id="experience" class="p-8 sm:p-12 md:p-16 lg:p-24">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900" data-i18n="workExperience">
              Work Experience
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
          </div>

          <div class="lg:col-span-8">
            <div class="relative">
              {siteConfig.experience.map((exp, index) => (
                <div class="relative mb-12 last:mb-0">
                  {/* Timeline dot at top of card */}
                  <div
                    class="absolute left-1/2 -top-2 w-4 h-4 bg-white border-2 rounded-full -translate-x-1/2 z-20 transition-all duration-300"
                    style={`border-color: ${siteConfig.accentColor}; background-color: ${siteConfig.accentColor}`}
                  />

                  {/* Connecting line below card */}
                  {index < siteConfig.experience.length - 1 && (
                    <div class="absolute left-1/2 bottom-0 w-0.5 h-12 bg-gray-300 -translate-x-1/2 translate-y-full z-10" />
                  )}

                  {/* Experience card */}
                  <div class="bg-white rounded-lg shadow-sm border border-gray-100 p-4 sm:p-5 md:p-6 hover:shadow-md transition-shadow duration-300">
                    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                      <div>
                        <h3 class="text-lg sm:text-xl font-semibold text-gray-900" data-exp-title={index}>
                          {getEN(exp.title)}
                        </h3>
                        <p
                          class="text-base sm:text-lg"
                          style={`color: ${siteConfig.accentColor}`}
                          set:html={exp.company}
                        >
                        </p>
                      </div>
                      <span class="text-xs sm:text-sm text-gray-500 mt-2 sm:mt-0">
                        {exp.dateRange}
                      </span>
                    </div>

                    <ul class="space-y-2" data-exp-bullets={index}>
                      {getEN(exp.bullets).map((bullet: string) => (
                        <li class="flex items-start">
                          <span class="inline-block w-1.5 h-1.5 rounded-full bg-gray-400 mt-2 mr-3 flex-shrink-0" />
                          <span class="text-sm sm:text-base text-gray-600" set:html={bullet}>
                          </span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}

<script define:vars={{ experience: siteConfig.experience }}>
  function getLocalizedValue(value, lang) {
    if (typeof value === 'object' && value !== null && !Array.isArray(value)) {
      return value[lang] || value.en || '';
    }
    return value || '';
  }

  window.addEventListener('languageChange', (e) => {
    const lang = e.detail.lang;

    experience.forEach((exp, index) => {
      // Update title
      const titleEl = document.querySelector(`[data-exp-title="${index}"]`);
      if (titleEl) {
        titleEl.textContent = getLocalizedValue(exp.title, lang);
      }

      // Update bullets
      const bulletsEl = document.querySelector(`[data-exp-bullets="${index}"]`);
      if (bulletsEl) {
        const bullets = getLocalizedValue(exp.bullets, lang);
        bulletsEl.innerHTML = bullets.map(bullet =>
          `<li class="flex items-start">
            <span class="inline-block w-1.5 h-1.5 rounded-full bg-gray-400 mt-2 mr-3 flex-shrink-0"></span>
            <span class="text-sm sm:text-base text-gray-600">${bullet}</span>
          </li>`
        ).join('');
      }
    });
  });
</script>

